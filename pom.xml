<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>AutomationProject</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>AutomationProject</name>
  <url>http://maven.apache.org</url>

  <properties>
    <selenium.java.version>4.27.0</selenium.java.version>
    <log4j.version>2.24.3</log4j.version>
    <webdriver.manager.version>5.9.2</webdriver.manager.version>
    <testng.version>7.10.2</testng.version>
    <jackson.version>2.18.2</jackson.version>
    <rest.assured.version>5.5.0</rest.assured.version>
    <commons-configuration.version>1.10</commons-configuration.version>
    <!-- plugins versions -->
    <maven.compiler.version>3.11.0</maven.compiler.version>
    <maven.dependency.version>3.6.0</maven.dependency.version>
    <maven.jar.version>3.3.0</maven.jar.version>
    <maven.surefire.version>3.1.2</maven.surefire.version>
    <maven.resources.plugin>3.3.1</maven.resources.plugin>
    <!-- output directory -->
    <package.directory>${project.build.directory}/docker-resources</package.directory>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.java.version}</version>
         </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>


    <!-- web-driver manager for local testing -->
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>${webdriver.manager.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- To deserialize json into Java object or vice versa -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Test framework -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/io.rest-assured/rest-assured -->
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest.assured.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/commons-configuration/commons-configuration -->
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>${commons-configuration.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>selenium-docker</finalName>
    <plugins>
      <!-- To compile the source code using specific java version. also to force IDE to change the settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>
      <!-- To run the tests using specific parameters, change thread count, testng report output directory etc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>
          <systemPropertyVariables>
            <!-- To run the tests using chrome using testng suite comment this line -->
       <browser>chrome</browser>
        <selenium.grid.enabled>false</selenium.grid.enabled>
      </systemPropertyVariables>
      <suiteXmlFiles>
        <file>testng.xml</file>
      </suiteXmlFiles>
      <parallel>tests</parallel>
      <threadCount>1</threadCount>
      <reportsDirectory>target/test-output</reportsDirectory>
    </configuration>
  </plugin>
  <!-- To copy all the dependencies to run our tests as part of "mvn package" -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven.dependency.version}</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${package.directory}/libs
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- To package our page objects, test classes into jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.version}</version>
        <configuration>
          <outputDirectory>${package.directory}/libs</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <includes>**/*.class</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- To copy resources into the output directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.plugin}</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${package.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
